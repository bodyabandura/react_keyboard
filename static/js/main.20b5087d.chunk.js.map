{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","event","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CAENC,WAAY,MAHhB,EAeEC,MAAQ,SAACA,GACP,IAAQC,EAAQD,EAARC,IAER,EAAKC,SAAS,CACZH,WAAYE,KAnBlB,uDAOE,WACEE,SAASC,iBAAiB,QAASC,KAAKL,SAR5C,kCAWE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,SAZ/C,oBAuBE,WACE,IAAQD,EAAeM,KAAKP,MAApBC,WAER,OAEE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACiB,MAAdR,EAAA,mCAC+BA,EAD/B,KAEG,kCAhCd,GAAyBS,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.20b5087d.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n\n    pressedKey: null,\n\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.event);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.event);\n  }\n\n  event = (event: KeyboardEvent) => {\n    const { key } = event;\n\n    this.setState({\n      pressedKey: key,\n    });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey != null\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}